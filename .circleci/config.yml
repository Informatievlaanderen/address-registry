version: 2.1

executors:
  job-executor:
    docker:
      - image: basisregisters/build-agent:latest

jobs:
  build:
    executor: job-executor

    environment:
      MYGET_FEED: /F/basisregisters
      MYGET_FEED_USER: informatievlaanderen
      MYGET_HOST: https://informatievlaanderen.myget.org
      NUGET_HOST: https://www.nuget.org
      GIT_USERNAME: release-bot
      GIT_AUTHOR_NAME: release-bot
      GIT_COMMITTER_NAME: release-bot
      GIT_EMAIL: informatie.vlaanderen@vlaanderen.be
      GIT_AUTHOR_EMAIL: informatie.vlaanderen@vlaanderen.be
      GIT_COMMITTER_EMAIL: informatie.vlaanderen@vlaanderen.be
      CONFLUENCE_USERNAME: david.cumps@vlaanderen.be

    steps:
      - checkout

      - setup_remote_docker

      - restore_cache:
          name: Restore node_modules cache
          keys:
            - v1-node-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}
            - v1-node-{{ arch }}-{{ .Branch }}-
            - v1-node-{{ arch }}-

      - restore_cache:
          name: Restore Paket  cache
          keys:
            - v1-paket-{{ arch }}-{{ .Branch }}-{{ checksum "paket.dependencies" }}
            - v1-paket-{{ arch }}-{{ .Branch }}-
            - v1-paket-{{ arch }}-

      - run:
          name: Nodejs Version
          command: node --version

      - run:
          name: Install NPM dependencies (master)
          command: |
            if [ "$CIRCLE_BRANCH" == "master" ];
            then
              npm install;
            fi

      - run:
          name: Run Semantic Release (master)
          command: |
            if [ "$CIRCLE_BRANCH" == "master" ];
            then
              npx semantic-release;
            fi

      - run:
          name: Run Build (non-master)
          command: |
            if [ "$CIRCLE_BRANCH" != "master" ];
            then
              ./build.sh;
            fi

      - save_cache:
          name: Save node_modules cache
          key: v1-node-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - node_modules

      - save_cache:
          name: Save Paket cache
          key: v1-paket-{{ arch }}-{{ .Branch }}-{{ checksum "paket.dependencies" }}
          paths:
            - ~/.nuget/packages
            - packages

      - persist_to_workspace:
          root: workspace
          paths:
            - semver

  push_to_production:
    executor: job-executor

    steps:
      - attach_workspace:
          at: /tmp/workspace

      - setup_remote_docker

      - run:
          name: Copy Docker images to production
          command: |
            SEMVER=$(cat /tmp/workspace/semver)
            eval $(AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID     AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY     aws ecr get-login --no-include-email --region eu-west-1 | sed 's|https://||')
            eval $(AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_PRD AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_PRD aws ecr get-login --no-include-email --region eu-west-1 | sed 's|https://||')

            docker pull $BUILD_DOCKER_REGISTRY/address-registry/api-legacy:$SEMVER
            docker tag  $BUILD_DOCKER_REGISTRY/address-registry/api-legacy:$SEMVER $BUILD_DOCKER_REGISTRY_PRD/address-registry/api-legacy:$SEMVER
            docker push $BUILD_DOCKER_REGISTRY_PRD/address-registry/api-legacy:$SEMVER

            docker pull $BUILD_DOCKER_REGISTRY/address-registry/api-crab-import:$SEMVER
            docker tag  $BUILD_DOCKER_REGISTRY/address-registry/api-crab-import:$SEMVER $BUILD_DOCKER_REGISTRY_PRD/address-registry/api-crab-import:$SEMVER
            docker push $BUILD_DOCKER_REGISTRY_PRD/address-registry/api-crab-import:$SEMVER

            docker pull $BUILD_DOCKER_REGISTRY/address-registry/api-extract:$SEMVER
            docker tag  $BUILD_DOCKER_REGISTRY/address-registry/api-extract:$SEMVER $BUILD_DOCKER_REGISTRY_PRD/address-registry/api-extract:$SEMVER
            docker push $BUILD_DOCKER_REGISTRY_PRD/address-registry/api-extract:$SEMVER

            docker pull $BUILD_DOCKER_REGISTRY/address-registry/projector:$SEMVER
            docker tag  $BUILD_DOCKER_REGISTRY/address-registry/projector:$SEMVER $BUILD_DOCKER_REGISTRY_PRD/address-registry/projector:$SEMVER
            docker push $BUILD_DOCKER_REGISTRY_PRD/address-registry/projector:$SEMVER

            docker pull $BUILD_DOCKER_REGISTRY/address-registry/projections-syndication:$SEMVER
            docker tag  $BUILD_DOCKER_REGISTRY/address-registry/projections-syndication:$SEMVER $BUILD_DOCKER_REGISTRY_PRD/address-registry/projections-syndication:$SEMVER
            docker push $BUILD_DOCKER_REGISTRY_PRD/address-registry/projections-syndication:$SEMVER

workflows:
  version: 2
  build_and_push_to_production:
    jobs:
      - build
      - push_to_production:
          requires:
            - build
          filters:
            branches:
              only:
                - master

