// <auto-generated />
using System;
using AddressRegistry.Consumer.Read.Postal;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AddressRegistry.Consumer.Read.Postal.Migrations
{
    [DbContext(typeof(PostalConsumerContext))]
    [Migration("20250820071942_AddIsRemoved")]
    partial class AddIsRemoved
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AddressRegistry.Consumer.Read.Postal.Projections.PostalInfoPostalName", b =>
                {
                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PostalName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PostalCode", "PostalName");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("PostalCode", "PostalName"), false);

                    b.HasIndex("PostalName");

                    b.ToTable("LatestItemPostalNames", "AddressRegistryConsumerReadPostal");
                });

            modelBuilder.Entity("AddressRegistry.Consumer.Read.Postal.Projections.PostalLatestItem", b =>
                {
                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsRemoved")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("NisCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("VersionTimestampAsDateTimeOffset")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("VersionTimestamp");

                    b.HasKey("PostalCode");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("PostalCode"));

                    b.HasIndex("NisCode");

                    b.HasIndex("VersionTimestampAsDateTimeOffset");

                    b.ToTable("LatestItems", "AddressRegistryConsumerReadPostal");
                });

            modelBuilder.Entity("Be.Vlaanderen.Basisregisters.ProjectionHandling.Runner.ProjectionStates.ProjectionStateItem", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DesiredState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DesiredStateChangedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Position")
                        .HasColumnType("bigint");

                    b.HasKey("Name");

                    b.ToTable("ProjectionStates", "AddressRegistryConsumerReadPostal");
                });

            modelBuilder.Entity("AddressRegistry.Consumer.Read.Postal.Projections.PostalInfoPostalName", b =>
                {
                    b.HasOne("AddressRegistry.Consumer.Read.Postal.Projections.PostalLatestItem", null)
                        .WithMany("PostalNames")
                        .HasForeignKey("PostalCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AddressRegistry.Consumer.Read.Postal.Projections.PostalLatestItem", b =>
                {
                    b.Navigation("PostalNames");
                });
#pragma warning restore 612, 618
        }
    }
}
