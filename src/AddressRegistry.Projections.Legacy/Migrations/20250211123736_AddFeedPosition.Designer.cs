// <auto-generated />
using System;
using AddressRegistry.Projections.Legacy;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AddressRegistry.Projections.Legacy.Migrations
{
    [DbContext(typeof(LegacyContext))]
    [Migration("20250211123736_AddFeedPosition")]
    partial class AddFeedPosition
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AddressRegistry.Projections.Legacy.AddressDetailV2WithParent.AddressDetailItemV2WithParent", b =>
                {
                    b.Property<int>("AddressPersistentLocalId")
                        .HasColumnType("int");

                    b.Property<string>("BoxNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HouseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastEventHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OfficiallyAssigned")
                        .HasColumnType("bit");

                    b.Property<int?>("ParentAddressPersistentLocalId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Position")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("PositionMethod")
                        .HasColumnType("int");

                    b.Property<int>("PositionSpecification")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Removed")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StreetNamePersistentLocalId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("VersionTimestampAsDateTimeOffset")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("VersionTimestamp");

                    b.HasKey("AddressPersistentLocalId");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("AddressPersistentLocalId"));

                    b.HasIndex("BoxNumber");

                    b.HasIndex("HouseNumber");

                    b.HasIndex("PostalCode");

                    b.HasIndex("Removed");

                    b.HasIndex("Status");

                    b.HasIndex("StreetNamePersistentLocalId");

                    b.HasIndex("VersionTimestampAsDateTimeOffset");

                    b.ToTable("AddressDetailsV2WithParent", "AddressRegistryLegacy");
                });

            modelBuilder.Entity("AddressRegistry.Projections.Legacy.AddressListV2.AddressListItemV2", b =>
                {
                    b.Property<int>("AddressPersistentLocalId")
                        .HasColumnType("int");

                    b.Property<string>("BoxNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HouseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastEventHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Removed")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StreetNamePersistentLocalId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("VersionTimestampAsDateTimeOffset")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("VersionTimestamp");

                    b.HasKey("AddressPersistentLocalId");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("AddressPersistentLocalId"));

                    b.HasIndex("BoxNumber");

                    b.HasIndex("HouseNumber");

                    b.HasIndex("PostalCode");

                    b.HasIndex("Removed");

                    b.HasIndex("Status");

                    b.HasIndex("StreetNamePersistentLocalId");

                    b.ToTable("AddressListV2", "AddressRegistryLegacy");
                });

            modelBuilder.Entity("AddressRegistry.Projections.Legacy.AddressListV2.AddressListViewCountV2", b =>
                {
                    b.Property<long>("Count")
                        .HasColumnType("bigint");

                    b.ToTable((string)null);

                    b.ToView("vw_AddressListCountV2", "AddressRegistryLegacy");
                });

            modelBuilder.Entity("AddressRegistry.Projections.Legacy.AddressListV2.AddressListViewItemV2", b =>
                {
                    b.Property<int>("AddressPersistentLocalId")
                        .HasColumnType("int");

                    b.Property<string>("BoxNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomonymAdditionDutch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomonymAdditionEnglish")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomonymAdditionFrench")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomonymAdditionGerman")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MunicipalityNameDutch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MunicipalityNameDutchSearch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MunicipalityNameEnglish")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MunicipalityNameEnglishSearch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MunicipalityNameFrench")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MunicipalityNameFrenchSearch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MunicipalityNameGerman")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MunicipalityNameGermanSearch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NisCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficialLanguages")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StreetNameDutch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetNameDutchSearch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetNameEnglish")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetNameEnglishSearch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetNameFrench")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetNameFrenchSearch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetNameGerman")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetNameGermanSearch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StreetNamePersistentLocalId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("VersionTimestamp")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("AddressPersistentLocalId");

                    b.ToTable((string)null);

                    b.ToSqlQuery("SELECT * FROM [AddressRegistryLegacy].[vw_AddressListV2] WITH (NOEXPAND)");
                });

            modelBuilder.Entity("AddressRegistry.Projections.Legacy.AddressSyndication.AddressBoxNumberSyndicationHelper", b =>
                {
                    b.Property<int>("PersistentLocalId")
                        .HasColumnType("int");

                    b.Property<string>("BoxNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOfficiallyAssigned")
                        .HasColumnType("bit");

                    b.Property<byte[]>("PointPosition")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("PositionMethod")
                        .HasColumnType("int");

                    b.Property<int?>("PositionSpecification")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("PersistentLocalId");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("PersistentLocalId"));

                    b.ToTable("AddressBoxNumberSyndicationHelper", "AddressRegistryLegacy");
                });

            modelBuilder.Entity("AddressRegistry.Projections.Legacy.AddressSyndication.AddressSyndicationItem", b =>
                {
                    b.Property<long>("FeedPosition")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FeedPosition"));

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Application")
                        .HasColumnType("int");

                    b.Property<string>("BoxNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventDataAsXml")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOfficiallyAssigned")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("LastChangedOnAsDateTimeOffset")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("LastChangedOn");

                    b.Property<int?>("Modification")
                        .HasColumnType("int");

                    b.Property<string>("Operator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Organisation")
                        .HasColumnType("int");

                    b.Property<int?>("PersistentLocalId")
                        .HasColumnType("int");

                    b.Property<byte[]>("PointPosition")
                        .HasColumnType("varbinary(max)");

                    b.Property<long>("Position")
                        .HasColumnType("bigint");

                    b.Property<int?>("PositionMethod")
                        .HasColumnType("int");

                    b.Property<int?>("PositionSpecification")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("RecordCreatedAtAsDateTimeOffset")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("RecordCreatedAt");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<Guid?>("StreetNameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("StreetNamePersistentLocalId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("SyndicationItemCreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("FeedPosition");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("FeedPosition"));

                    b.HasIndex("AddressId");

                    b.HasIndex("FeedPosition")
                        .HasDatabaseName("CI_AddressSyndication_FeedPosition")
                        .HasAnnotation("SqlServer:ColumnStoreIndex", "");

                    b.HasIndex("PersistentLocalId");

                    b.HasIndex("Position");

                    b.ToTable("AddressSyndication", "AddressRegistryLegacy");
                });

            modelBuilder.Entity("Be.Vlaanderen.Basisregisters.ProjectionHandling.Runner.ProjectionStates.ProjectionStateItem", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DesiredState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DesiredStateChangedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Position")
                        .HasColumnType("bigint");

                    b.HasKey("Name");

                    b.ToTable("ProjectionStates", "AddressRegistryLegacy");
                });
#pragma warning restore 612, 618
        }
    }
}
